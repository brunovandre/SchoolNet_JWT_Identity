// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolNet_JWT_Identity.Context;

namespace SchoolNet_JWT_Identity.Migrations
{
    [DbContext(typeof(SchoolNetContext))]
    [Migration("20190130021142_First Commit")]
    partial class FirstCommit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<bool>("Online");

                    b.Property<decimal>("Price");

                    b.Property<int>("WorkLoad");

                    b.HasKey("Id");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("FullName");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.Property<int>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("StudentClass");
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.Course", b =>
                {
                    b.OwnsOne("SchoolNet_JWT_Identity.Entities.Base.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CourseId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("CreationUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("LastModificationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("LastModifierUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.ToTable("Course");

                            b1.HasOne("SchoolNet_JWT_Identity.Entities.Course")
                                .WithOne("Audit")
                                .HasForeignKey("SchoolNet_JWT_Identity.Entities.Base.Audit", "CourseId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.Student", b =>
                {
                    b.OwnsOne("SchoolNet_JWT_Identity.Entities.Base.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("StudentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("CreationUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("LastModificationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("LastModifierUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.ToTable("Student");

                            b1.HasOne("SchoolNet_JWT_Identity.Entities.Student")
                                .WithOne("Audit")
                                .HasForeignKey("SchoolNet_JWT_Identity.Entities.Base.Audit", "StudentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.StudentClass", b =>
                {
                    b.HasOne("SchoolNet_JWT_Identity.Entities.Course", "Course")
                        .WithMany("StudentClasses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolNet_JWT_Identity.Entities.Student", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolNet_JWT_Identity.Entities.Teacher", "Teacher")
                        .WithMany("StudentClasses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("SchoolNet_JWT_Identity.Entities.Base.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("StudentClassId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("CreationUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("LastModificationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("LastModifierUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.ToTable("StudentClass");

                            b1.HasOne("SchoolNet_JWT_Identity.Entities.StudentClass")
                                .WithOne("Audit")
                                .HasForeignKey("SchoolNet_JWT_Identity.Entities.Base.Audit", "StudentClassId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("SchoolNet_JWT_Identity.Entities.Teacher", b =>
                {
                    b.OwnsOne("SchoolNet_JWT_Identity.Entities.Base.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("TeacherId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("CreationUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("LastModificationDate")
                                .HasColumnType("datetime");

                            b1.Property<Guid>("LastModifierUserId")
                                .HasColumnType("uniqueidentifier");

                            b1.ToTable("Teacher");

                            b1.HasOne("SchoolNet_JWT_Identity.Entities.Teacher")
                                .WithOne("Audit")
                                .HasForeignKey("SchoolNet_JWT_Identity.Entities.Base.Audit", "TeacherId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
